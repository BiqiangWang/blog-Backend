<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Temperature</name>
    </assembly>
    <members>
        <member name="M:Temperature.Controllers.AccountController.Login(System.String,System.String)">
             <summary>
             登录
             </summary>
             <param name="nick_name">用户名</param>
             <param name="password">密码</param>
             <returns></returns>
             <response code="200">成功</response>
            <remarks>
                 返回内容示例
                 {
                     userid = id,
                     loginFlag = flag, 
                     token = token
                 }
                 
                 flag：
                 0：未执行
                 1：成功
                 2：密码错误
                 3：用户名不存在
                 
             </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.register(System.String,System.String)">
            <summary>
            注册
            </summary>
            <param name="nick_name"></param>
            <param name="password"></param>
            <returns></returns>
            <response code="200">注册成功</response>
            <remarks>
                返回内容：
                {
                    RegisterFlag = flag
                }
                
                flag:
                0: 未执行
                1：注册成功
                2：用户名已经被占用
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.personalInfo(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            维护个人信息（不含头像维护）
            </summary>
            <param name="nick_name"></param>
            <param name="gender"></param>
            <param name="location"></param>
            <param name="year"></param>
            <param name="month"></param>
            <param name="day"></param>
            <param name="email"></param>
            <param name="tel"></param>
            <param name="wechat"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                    Infoflag = flag
                }
                
                flag:
                0: 未执行
                1：信息存储完成
                2：没有找到该用户
            
            </remarks>
            
        </member>
        <member name="M:Temperature.Controllers.AccountController.updateAvatr(Microsoft.AspNetCore.Http.IFormCollection,System.String)">
            <summary>
            上传头像
            </summary>
            <param name="collection">[FromForm]头像文件</param>
            <param name="nick_name">昵称</param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                    UploadFlag = flag
                }
                flag:
                0: 未执行
                1：成功
                2：没有找到该用户
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.getAvatrResource(System.String)">
            <summary>
            返回用户头像（存储的地址）
            </summary>
            <param name="nick_name">用户名</param>
            <returns></returns>
            <remarks>
                返回实例
                {
                    ReturnFlag = flag, 
                    UserAvatr = user.Avatr
                }
                
                flag:
                0: 未执行
                1：成功
                2：没有找到该用户
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.getUserInfoByNickName(System.String)">
            <summary>
            查询用户所有基本信息
            </summary>
            <param name="nick_name">用户名</param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                    uploadFlag = flag,
                    userInfo = user
                }
                flag:
                0: 未执行
                1：成功
                2：没有找到该用户
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.createAnnouncementByNickName(System.String,System.String)">
            <summary>
            添加/更新 公告内容
            </summary>
            <param name="nick_name">用户名</param>
            <param name="content">公告内容</param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                    Userid = id,
                    CreateFlag = flag 
                }
            
                flag:
                0: 未执行
                1：成功
                2：没有找到该用户
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.deleteAnnouncementByNickName(System.String)">
            <summary>
            删除公告
            </summary>
            <param name="nick_name">用户名</param>
            <returns></returns>
            <remarks>
                返回内容：
                
                {
                    DeleteFlag = flag
                }
                
                flag:
                
                0: 未执行
                1：成功
                2：没有找到该用户
                3：该用户没有创建过公告
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.getAnnouncementByNickName(System.String)">
            <summary>
            获取用户公告内容
            </summary>
            <param name="nick_name">用户名</param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                    GetFlag = flag,
                    content = announcement
                }
            
                flag:
                0: 未执行
                1：成功
                2：没有找到该用户
                3：该用户没有创建过公告
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.createFollowByNickNames(System.String,System.String)">
            <summary>
            创建关注关系
            </summary>
            <param name="nameOfBlogger">被关注者</param>
            <param name="nameOfFans">关注者</param>
            <returns></returns>
            <remarks>
                返回内容:
                {
                    CreateFlag = flag
                }
                
                flag:
                0: 未执行
                1：成功
                2：两个用户都不存在
                3：博主用户不存在
                4：粉丝用户不存在
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.deleteFollowByNickName(System.String,System.String)">
            <summary>
            删除关注关系
            </summary>
            <param name="nameOfBlogger">被关注者</param>
            <param name="nameOfFans">关注者</param>
            <returns></returns>
            <remarks>
                返回消息内容:
                {
                    GetFlag = flag 
                }
                
                flag：
                0: 未执行
                1：成功
                2：两个用户都不存在
                3：博主用户不存在
                4：粉丝用户不存在
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.getFansListByNickName(System.String)">
            <summary>
            返回粉丝列表
            </summary>
            <param name="nick_name">博主用户名</param>
            <returns></returns>
            <remarks>
                返回内容:
                {
                    returnFlag = flag,
                    fansList = fansID
                }
                
                flag:
                0: 未执行
                1：成功
                2：用户寻找失败
                3：该用户没有粉丝
                
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.AccountController.getFollowListByNickName(System.String)">
            <summary>
            返回关注的博主列表
            </summary>
            <param name="nick_name">博主用户名</param>
            <returns></returns>
            <remarks>
                返回内容:
                {
                    returnFlag = flag, 
                    FollowList =  followID
                }
                
                flag:
                0: 未执行
                1：成功
                2：没有该用户
                3：该用户关注的博主为空
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.createArticleByNickName(System.String,System.String,System.String)">
            <summary>
            创建文章名为nick_name用户创建一篇题目为title内容为content的文章
            </summary>
            <param name="nick_name"></param>
            <param name="articleName"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                        ReturnFlag = flag,
                        UserName = nick_name, 
                        Article_Name = title, 
                        result = result
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：该用户已存在同名文章
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.createArticleCommentByNickName(System.String,System.String,System.String)">
            <summary>
            新增文章评论
            名为nick_name用户为一篇题目为title的文章写评论，内容为content
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <param name="content"></param>
            <returns></returns>
            <remarks>
            
                返回内容：
                {
                        ReturnFlag = flag,
                        articleID = A_id,
                        articlecomment = content
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
                
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.getArticleInfoByTitle(System.String,System.String)">
            <summary>
            查看文章信息
            名为nick_name用户查看一篇题目为title的文章
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                        ReturnFlag = flag, 
                        INFO = info
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.deleteArticleByTitle(System.String,System.String)">
            <summary>
            删除文章
            名为nick_name用户删除自己的题目为title的文章
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <returns></returns>
            <remarks>
            
                返回内容：
                {
                       eturnFlag = flag,
                       UserName = nick_name,
                       ArticleName = title,
                       result = "success!"
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
                
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.deleteArticleCommentByID(System.String,System.Int32)">
            <summary>
            删除评论名为nick_name用户删除自己的id为articlecommentID的评论
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <param name="articlecommentID"></param>
            <returns></returns>
            <remarks>
            
                返回内容：
                {
                      ReturnFlag = flag, 
                      result = "successful deleted"
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该用户评论
                
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.getArticleCommentByTitle(System.String,System.String)">
            <summary>
            查看文章评论
            名为nick_name用户查看一篇题目为title的文章的所有评论
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <returns></returns>
             <remarks>
                返回内容：
                {
                      ReturnFlag = flag, 
                      Item = item
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.DeleteArticleVisitByTitle(System.String,System.String)">
            <summary>
            删除文章浏览记录
            名为nick_name用户删除自己浏览题目为title的文章的记录
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                      ReturnFlag = flag,
                      result = "successful deleted"
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
                4：没有找到浏览记录
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.getArticleVisitByTitle(System.String,System.String)">
            <summary>
            获取文章浏览记录
            名为nick_name用户查看一篇题目为title的文章的所有浏览记录
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                      ReturnFlag = flag, 
                      Item = item
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.getArticleRankByTitle(System.String,System.String)">
            <summary>
            获取文章浏览排行
            名为nick_name用户查看一篇题目为title的文章的排行
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <returns></returns>
             <remarks>
                返回内容：
                {
                      ReturnFlag = flag, 
                      Itme = item
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.updateArticleByTtile(System.String,System.String,System.String,System.String)">
            <summary>
            更新文章
            名为nick_name用户更新一篇题目为title的文章的题目和内容
            </summary>
            <param name="nick_name"></param>
            <param name="title"></param>
            <param name="newName"></param>
            <param name="newContent"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                      ReturnFlag = flag, 
                      UserName = nick_name, 
                      OldName = title, 
                      NewName = newName,
                      NewContent=newContent
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该文章
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.updateArticleCommentByID(System.String,System.Int32,System.String)">
            <summary>
            更新评论
            名为nick_name用户更新id为articlecrid的评论的内容
            </summary>
            <param name="nick_name"></param>
            <param name="articlecrid"></param>
            <param name="newContent"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                      ReturnFlag = flag,
                      UserName = nick_name, 
                      crID=articlecrid,
                      NewContent = newContent
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到该评论
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.ArticleController.createCommentCommentByID(System.String,System.Int32,System.String)">
            <summary>
            评论评论
            名为nick_name用户评论id为articlecrid的评论
            </summary>
            <param name="nick_name"></param>
            <param name="articlecommentID1"></param>
            <param name="articlecommentID2"></param>
            <param name="content"></param>
            <returns></returns>
            <remarks>
                返回内容：
                {
                      ReturnFlag = flag, 
                      aclid = articlecommentID1, 
                      result = " NOT FOUND"
                }
                
                flag:
                0：未操作
                1：成功
                2：没有找到该用户
                3：没找到要评论的评论
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.createFolderByNickName(System.String,System.String)">
             <summary>
             新建收藏夹(禁止同一用户创建同名收藏夹）
             </summary>
             <param name="nick_name">用户名</param>
             <param name="folderName">收藏夹名</param>
             <returns></returns>
            <remarks>
                 返回信息：
                 {
                     ReturnFlag = flag,
                     user = nick_name,
                     folder = folderName
                 }
                 
                 flag:
                 
                 0：未操作
                 
                 1：成功
                 
                 2：该用户已存在同名收藏夹
             </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.addArticleByID(System.String,System.String,System.Int32)">
            <summary>
            向收藏夹中添加文章
            </summary>
            <param name="nick_name">用户名</param>
            <param name="folderName">文件夹名</param>
            <param name="articleID">文章ID</param>
            <returns></returns>
            <remarks>
                flag
                
                0：未操作
                
                1：成功
                
                    返回：{ReturnFlag = flag, folderID = F_id, articleId = articleID }
                    
                2：没找到该用户
                
                    返回：{ReturnFlag = flag, UserID = id, result = "NOT FOUND"}
                    
                3：没找到该文件夹
                
                    返回：{ReturnFlag = flag, folderID = F_id, result = "NOT FOUND" }
                    
                4：没有该文章
                
                    返回：{ ReturnFlag = flag, ArticleID = articleID, result = "Article NOT FOUND!"}
                    
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.getFolderInfoByName(System.String,System.String)">
            <summary>
            获取收藏夹总览信息
            </summary>
            <param name="nick_name">用户名</param>
            <param name="folderName">收藏夹名</param>
            <returns></returns>
            <remarks>
                flag
                
                0：未操作
                
                1：成功
                
                    返回：{ReturnFlag = flag, INFO = info }
                    
                2：没找到该用户
                
                    返回：{ReturnFlag = flag, UserName= nick_name, result = "NOT FOUND"}
                    
                3：没找到该文件夹
                
                    返回：{ReturnFlag = flag, FolderName=folderName, result = "NOT FOUND" }
                    
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.deleteFolderByName(System.String,System.String)">
            <summary>
            删除收藏夹
            </summary>
            <param name="nick_name">用户名</param>
            <param name="folderName">收藏夹名</param>
            <returns></returns>
            <remarks>
                flag
                
                0：未操作
                
                1：成功
                
                    返回：{ReturnFlag = flag, UserName = nick_name, FolderName = folderName,result ="success!" }
                    
                2：没找到该用户
                
                    返回：{ReturnFlag = flag, UserName = nick_name,  result = "NOT FOUND"}
                    
                3：没找到该文件夹
                
                    返回：{ReturnFlag = flag, FolderName = folderName, result = "NOT FOUND" }
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.updateFolderNameByName(System.String,System.String,System.String)">
            <summary>
            更新收藏夹名字
            </summary>
            <param name="nick_name">用户名</param>
            <param name="oldName">旧收藏夹名</param>
            <param name="newName">新收藏夹名</param>
            <returns></returns>
            <remarks>
            
            
                flag
                
                0：未操作
                
                1：成功
                
                    返回：{ReturnFlag = flag, UserName = nick_name, OldName = oldName, NewName = newName  }
                    
                2：没找到该用户
                
                    返回：{ReturnFlag = flag, UserName = nick_name, result = "NOT FOUND"}
                    
                3：没找到该文件夹
                
                    返回：{ReturnFlag = flag, folderName = oldName, result = "NOT FOUND" }
                    
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.deleteArticleByID(System.String,System.String,System.Int32)">
            <summary>
            删除收藏夹中的文章
            </summary>
            <param name="nick_name">用户名</param>
            <param name="folderName">收藏夹名</param>
            <param name="articleID">文章ID</param>
            <returns></returns>
            <remarks>
                flag
                
                0：未操作
                
                1：成功
                
                    返回：{ReturnFlag = flag, result = "successful deleted"}
                    
                2：没找到该用户
                
                    返回：{ ReturnFlag = flag,UserName = nick_name, result = "NOT FOUND" }
                    
                3：没找到该文件夹
                
                    返回：{ReturnFlag = flag, FolderName = folderName, result = "NOT FOUND" }
                    
                4：收藏夹里没有该文章
                
                    返回：{ReturnFlag = flag, folderID = F_id, ArticleID = articleID, result = "NOT FOUND"}
                    
                5：收藏夹为空
                
                    返回：{ReturnFlag = flag, result = "EMPTY FOLDER"}
                    
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.FavouriteController.getArticleListByName(System.String,System.String)">
            <summary>
            查看收藏夹内收藏文章(ID)
            </summary>
            <param name="nick_name">用户名</param>
            <param name="folderName">收藏夹名</param>
            <returns></returns>
            <remarks>
                flag 
                
                0：未操作
                
                1：成功
                
                    返回：{ReturnFlag = flag, result = "successful deleted"}
                    
                2：没找到该用户
                
                    返回：{ ReturnFlag = flag,UserName = nick_name, result = "NOT FOUND" }
                    
                3：没找到该文件夹
                
                    返回：{ReturnFlag = flag, FolderName = folderName, result = "NOT FOUND" }
                    
            </remarks>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.createAlbumByID(System.String,System.String,System.String)">
            <summary>
            新建相簿
            </summary>
            <param name="albumIntro"></param>
            <param name="albumName"></param>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法创建，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.createAlbumHistoryByID(System.String,System.String)">
            <summary>
            记录相簿访问
            </summary>
            <param name="albumID"></param>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法新建记录，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.createPhotoByID(Microsoft.AspNetCore.Http.IFormFileCollection,System.String,System.String)">
            <summary>
            上传图片到指定相册 支持多文件上传
            </summary>
            <param name="uploadedPhoto"></param>
            <param name="albumID"></param>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法新建图片，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.createPhotoCommentByID(System.String,System.String,System.String)">
            <summary>
            评论图片
            </summary>
            <param name="content"></param>
            <param name="photoID"></param>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法评论图片，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.deleteAlbumByID(System.String,System.String)">
            <summary>
            删除相册本地内容以及数据库记录
            </summary>
            <param name="albumID"></param>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法删除相册，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.deleteAlbumHistoryByID(System.String,System.String)">
            <summary>
            删除相册访问历史记录
            </summary>
            <param name="albumID"></param>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法删除历史，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.deletePhotoByID(System.String)">
            <summary>
            删除某一张图片
            </summary>
            <param name="photoID"></param>
            <response code="200">成功</response>
            <response code="403">无法删除，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.deletePhotoCommentByID(System.String)">
            <summary>
            刪除图片评论
            </summary>
            <param name="commentID"></param>
            <response code="200">成功</response>
            <response code="403">无法删除，出现错误/异常</response>
            <returns>123</returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.getAlbumHistryByID(System.String)">
            <summary>
            获取相簿浏览历史信息
            </summary>
            <param name="albumID"></param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.getAllAlbumByID(System.String)">
            <summary>
            获取所有相簿
            </summary>
            <param name="userID"></param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.getAllPhotoByID(System.String,System.String)">
            <summary>
            获取相簿内所有图片
            </summary>
            <param name="albumID"></param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.getPhotoCommentByID(System.String)">
            <summary>
            获取图片评论
            </summary>
            <param name="photoID"></param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.getPhotoHistoryByID(System.String)">
            <summary>
            获取图片浏览历史
            </summary>
            <param name="photoID"></param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.PhotoController.setPhotoLike(System.String)">
            <summary>
            图片点赞量更新
            </summary>
            <param name="photoID"></param>
            <response code="200">成功</response>
            <response code="403">无法更新点赞，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.TopicController.createTopicAnswerByID(System.String,System.String,System.String)">
            <summary>
            创建话题回复
            </summary>
            <param name="content"></param>
            <param name="topicID"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.TopicController.createTopicByID(System.String,System.String,System.String,System.String)">
            <summary>
            创建话题
            </summary>
            <param name="content"></param>
            <param name="title"></param>
            <param name="userID"></param>
            <param name="zoneID"></param>
            <response code="200">成功</response>
            <response code="403">无法创建</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.TopicController.deleteTopicAnswerByID(System.String)">
            <summary>
            根据ID删除话题评论
            </summary>
            <param name="answerID"></param>
            <response code="200">成功</response>
            <response code="403">无法删除，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.TopicController.deleteTopicByID(System.String)">
            <summary>
            根据用户ID删除相应用户
            </summary>
            <param name="topicID"></param>
            <response code="200">成功</response>
            <response code="403">无法删除，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.TopicController.getTopicByPage(System.Int32,System.Int32,System.String)">
            <summary>
            分页获取topic
            </summary>
            <param name="pageNum">页号</param>
            <param name="pageSize">每页大小</param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
        <member name="M:Temperature.Controllers.TopicController.getTopicCommentByID(System.String)">
            <summary>
            获取topicID话题下的评论
            </summary>
            <param name="topicID"></param>
            <response code="200">成功</response>
            <response code="403">无法获取，出现错误/异常</response>
            <returns></returns>
        </member>
    </members>
</doc>
